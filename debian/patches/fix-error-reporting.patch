From: Wim Taymans <wtaymans@redhat.com>
Date: Tue, 12 May 2020 15:55:13 +0200
Subject: fix error reporting

dlopen and dlsym don't set errno

Origin: upstream, 0.3.6, commit:0a54249718c32844a4f0c8d8aa9672daa4cdb19f
---
 spa/examples/adapter-control.c | 8 ++++----
 spa/examples/example-control.c | 8 ++++----
 spa/examples/local-v4l2.c      | 4 ++--
 3 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/spa/examples/adapter-control.c b/spa/examples/adapter-control.c
index 47e7f99..c80c860 100644
--- a/spa/examples/adapter-control.c
+++ b/spa/examples/adapter-control.c
@@ -98,11 +98,11 @@ static int load_handle(struct data *data, struct spa_handle **handle, const char
 
 	if ((hnd = dlopen(lib, RTLD_NOW)) == NULL) {
 		printf("can't load %s: %s\n", lib, dlerror());
-		return -errno;
+		return -ENOENT;
 	}
 	if ((enum_func = dlsym(hnd, SPA_HANDLE_FACTORY_ENUM_FUNC_NAME)) == NULL) {
 		printf("can't find enum function\n");
-		return -errno;
+		return -ENOENT;
 	}
 
 	for (i = 0;;) {
@@ -193,11 +193,11 @@ static int make_node(struct data *data, struct spa_node **node, const char *lib,
 
 	if ((hnd = dlopen(lib, RTLD_NOW)) == NULL) {
 		printf("can't load %s: %s\n", lib, dlerror());
-		return -errno;
+		return -ENOENT;
 	}
 	if ((enum_func = dlsym(hnd, SPA_HANDLE_FACTORY_ENUM_FUNC_NAME)) == NULL) {
 		printf("can't find enum function\n");
-		return -errno;
+		return -ENOENT;
 	}
 
 	for (i = 0;;) {
diff --git a/spa/examples/example-control.c b/spa/examples/example-control.c
index 023e4e1..6f54db5 100644
--- a/spa/examples/example-control.c
+++ b/spa/examples/example-control.c
@@ -144,11 +144,11 @@ static int make_node(struct data *data, struct spa_node **node, const char *lib,
 
 	if ((hnd = dlopen(lib, RTLD_NOW)) == NULL) {
 		printf("can't load %s: %s\n", lib, dlerror());
-		return -errno;
+		return -ENOENT;
 	}
 	if ((enum_func = dlsym(hnd, SPA_HANDLE_FACTORY_ENUM_FUNC_NAME)) == NULL) {
 		printf("can't find enum function\n");
-		return -errno;
+		return -ENOENT;
 	}
 
 	for (i = 0;;) {
@@ -424,11 +424,11 @@ static int load_handle(struct data *data, struct spa_handle **handle, const char
 
 	if ((hnd = dlopen(lib, RTLD_NOW)) == NULL) {
 		printf("can't load %s: %s\n", lib, dlerror());
-		return -errno;
+		return -ENOENT;
 	}
 	if ((enum_func = dlsym(hnd, SPA_HANDLE_FACTORY_ENUM_FUNC_NAME)) == NULL) {
 		printf("can't find enum function\n");
-		return -errno;
+		return -ENOENT;
 	}
 
 	for (i = 0;;) {
diff --git a/spa/examples/local-v4l2.c b/spa/examples/local-v4l2.c
index d465968..a8466c2 100644
--- a/spa/examples/local-v4l2.c
+++ b/spa/examples/local-v4l2.c
@@ -98,11 +98,11 @@ static int load_handle(struct data *data, struct spa_handle **handle, const char
 
 	if ((hnd = dlopen(lib, RTLD_NOW)) == NULL) {
 		printf("can't load %s: %s\n", lib, dlerror());
-		return -errno;
+		return -ENOENT;
 	}
 	if ((enum_func = dlsym(hnd, SPA_HANDLE_FACTORY_ENUM_FUNC_NAME)) == NULL) {
 		printf("can't find enum function\n");
-		return -errno;
+		return -ENOENT;
 	}
 
 	for (i = 0;;) {
